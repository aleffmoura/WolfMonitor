// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Totten.Solutions.WolfMonitor.Infra.ORM.Contexts;

namespace Totten.Solutions.WolfMonitor.Infra.ORM.Migrations
{
    [DbContext(typeof(WolfMonitorContext))]
    [Migration("20200202155308_FirstMigrationWolfMonitor")]
    partial class FirstMigrationWolfMonitor
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Totten.Solutions.WolfMonitor.Domain.Features.Agents.Agent", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CompanyId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Configured")
                        .HasColumnType("bit");

                    b.Property<DateTime>("CreatedIn")
                        .HasColumnType("datetime2");

                    b.Property<string>("DisplayName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("FirstConnection")
                        .HasColumnType("datetime2");

                    b.Property<string>("HostAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HostName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastConnection")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("LastUpload")
                        .HasColumnType("datetime2");

                    b.Property<string>("LocalIp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("MachineName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<bool>("Removed")
                        .HasColumnType("bit");

                    b.Property<DateTime>("UpdatedIn")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UserWhoCreatedId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("UserWhoCreatedName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.HasIndex("UserWhoCreatedId");

                    b.ToTable("Agents");

                    b.HasData(
                        new
                        {
                            Id = new Guid("56159a2a-bbfd-413a-be9c-445bd8bbe894"),
                            CompanyId = new Guid("c576cf93-370c-4464-21f9-08d763d27d75"),
                            Configured = false,
                            CreatedIn = new DateTime(2020, 2, 2, 12, 53, 7, 848, DateTimeKind.Local).AddTicks(5113),
                            DisplayName = "Servidor BR 1",
                            Login = "servidor1",
                            Password = "123456",
                            Removed = false,
                            UpdatedIn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserWhoCreatedId = new Guid("f91a2366-c469-412a-9197-976a90516272"),
                            UserWhoCreatedName = "Admin"
                        });
                });

            modelBuilder.Entity("Totten.Solutions.WolfMonitor.Domain.Features.Companies.Company", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Cnpj")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedIn")
                        .HasColumnType("datetime2");

                    b.Property<string>("FantasyName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Removed")
                        .HasColumnType("bit");

                    b.Property<DateTime>("UpdatedIn")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Companies");

                    b.HasData(
                        new
                        {
                            Id = new Guid("c576cf93-370c-4464-21f9-08d763d27d75"),
                            Cnpj = "35.344.681/0001-90",
                            CreatedIn = new DateTime(2020, 2, 2, 12, 53, 7, 844, DateTimeKind.Local).AddTicks(9898),
                            FantasyName = "tottemsolutions",
                            Name = "ALEFF MOURA DA SILVA 10685805425",
                            Removed = false,
                            UpdatedIn = new DateTime(2020, 2, 2, 12, 53, 7, 846, DateTimeKind.Local).AddTicks(3793)
                        });
                });

            modelBuilder.Entity("Totten.Solutions.WolfMonitor.Domain.Features.Agents.Agent", b =>
                {
                    b.HasOne("Totten.Solutions.WolfMonitor.Domain.Features.Companies.Company", "Company")
                        .WithMany("Agents")
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
