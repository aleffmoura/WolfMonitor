// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Totten.Solutions.WolfMonitor.Infra.ORM.Contexts;

namespace Totten.Solutions.WolfMonitor.Infra.ORM.Migrations
{
    [DbContext(typeof(AuthContext))]
    partial class AuthContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Totten.Solutions.WolfMonitor.Domain.Features.UsersAggregation.Role", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreatedIn");

                    b.Property<int>("Level");

                    b.Property<string>("Name")
                        .IsRequired();

                    b.Property<bool>("Removed");

                    b.Property<DateTime>("UpdatedIn");

                    b.HasKey("Id");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            Id = new Guid("0b17ce07-c0f0-4d30-9a28-e82ff50d0e58"),
                            CreatedIn = new DateTime(2020, 5, 28, 19, 3, 31, 637, DateTimeKind.Local).AddTicks(6769),
                            Level = 0,
                            Name = "Agent",
                            Removed = false,
                            UpdatedIn = new DateTime(2020, 5, 28, 19, 3, 31, 638, DateTimeKind.Local).AddTicks(3999)
                        },
                        new
                        {
                            Id = new Guid("435b9712-c523-4118-86f0-095cae7f3336"),
                            CreatedIn = new DateTime(2020, 5, 28, 19, 3, 31, 640, DateTimeKind.Local).AddTicks(804),
                            Level = 1,
                            Name = "User",
                            Removed = false,
                            UpdatedIn = new DateTime(2020, 5, 28, 19, 3, 31, 640, DateTimeKind.Local).AddTicks(810)
                        },
                        new
                        {
                            Id = new Guid("f91a2366-c469-412a-9197-976a90516272"),
                            CreatedIn = new DateTime(2020, 5, 28, 19, 3, 31, 640, DateTimeKind.Local).AddTicks(933),
                            Level = 2,
                            Name = "Admin",
                            Removed = false,
                            UpdatedIn = new DateTime(2020, 5, 28, 19, 3, 31, 640, DateTimeKind.Local).AddTicks(934)
                        },
                        new
                        {
                            Id = new Guid("c7d3fdb8-be1e-4b3c-aa49-729dcb12f241"),
                            CreatedIn = new DateTime(2020, 5, 28, 19, 3, 31, 640, DateTimeKind.Local).AddTicks(974),
                            Level = 3,
                            Name = "System",
                            Removed = false,
                            UpdatedIn = new DateTime(2020, 5, 28, 19, 3, 31, 640, DateTimeKind.Local).AddTicks(974)
                        });
                });

            modelBuilder.Entity("Totten.Solutions.WolfMonitor.Domain.Features.UsersAggregation.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("CompanyId");

                    b.Property<string>("Cpf")
                        .IsRequired();

                    b.Property<DateTime>("CreatedIn");

                    b.Property<string>("Email");

                    b.Property<string>("FirstName")
                        .IsRequired();

                    b.Property<string>("Language")
                        .IsRequired();

                    b.Property<DateTime?>("LastLogin");

                    b.Property<string>("LastName");

                    b.Property<string>("Login")
                        .IsRequired();

                    b.Property<string>("Password")
                        .IsRequired();

                    b.Property<string>("RecoverSolicitationCode");

                    b.Property<bool>("Removed");

                    b.Property<Guid>("RoleId");

                    b.Property<string>("Token");

                    b.Property<string>("TokenSolicitationCode");

                    b.Property<DateTime>("UpdatedIn");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.HasIndex("RoleId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = new Guid("f75a1881-0fd6-4273-9d23-c59018788201"),
                            CompanyId = new Guid("c576cf93-370c-4464-21f9-08d763d27d75"),
                            Cpf = "11111111111",
                            CreatedIn = new DateTime(2020, 5, 28, 19, 3, 31, 658, DateTimeKind.Local).AddTicks(9313),
                            Email = "aleffmds@gmail.com",
                            FirstName = "Aleff",
                            Language = "pt-BR",
                            LastName = "Moura da Silva",
                            Login = "aleffmoura",
                            Password = "I2uzfR1PyNB3qujyRKe/fvFvXQzylgU+UUIARcpeLkI=",
                            Removed = false,
                            RoleId = new Guid("c7d3fdb8-be1e-4b3c-aa49-729dcb12f241"),
                            UpdatedIn = new DateTime(2020, 5, 28, 19, 3, 31, 658, DateTimeKind.Local).AddTicks(9848)
                        });
                });

            modelBuilder.Entity("Totten.Solutions.WolfMonitor.Domain.Features.UsersAggregation.User", b =>
                {
                    b.HasOne("Totten.Solutions.WolfMonitor.Domain.Features.UsersAggregation.Role", "Role")
                        .WithMany("Users")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
